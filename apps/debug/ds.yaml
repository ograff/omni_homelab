apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: alpine-debugger
  namespace: debug
  labels:
    app: alpine-debugger
spec:
  selector:
    matchLabels:
      app: alpine-debugger
  template:
    metadata:
      labels:
        app: alpine-debugger
    spec:
      # Tolerate control plane taints to run on master nodes
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      
      # Optional: Add node affinity to ensure it runs on all nodes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      
      containers:
      - name: alpine
        image: alpine:3.22.0
        # Keep the container running
        command: ["/bin/sh"]
        args: ["-c", "while true; do echo 'Alpine container running on node:' ${NODE_NAME}; sleep 300; done"]
        
        # Resource limits (optional but recommended)
        resources:
          limits:
            memory: "128Mi"
            cpu: "100m"
          requests:
            memory: "64Mi"
            cpu: "50m"
        
        # Security context (optional but recommended)
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: false
        
        # Environment variables (optional)
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

        # Mount the Tailscale socket
        volumeMounts:
        - name: tailscale-socket
          mountPath: /var/run/tailscale/tailscaled.sock

      # Define the volume for the Tailscale socket
      volumes:
      - name: tailscale-socket
        hostPath:
          path: /var/run/tailscale/tailscaled.sock
          type: Socket
      
      # Restart policy for DaemonSet pods
      restartPolicy: Always
      
      # Service account (optional)
      serviceAccountName: default
      
      # Priority class (optional)
      # priorityClassName: system-node-critical

wallos:
  # Default values for wallos.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1

  image:
    repository: ghcr.io/ellite/wallos
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "3.3.1"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    className: "nginx"
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: wallos.2411.house
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  # -- Strategy used to replace old Pods by new ones
  strategy:
    type: Recreate
    # type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 1
    #   maxUnavailable: 33%

  # -- Host networking requested for the pod. Beware that setting this to true requires all container ports declared in the pod to be free on the node. This can be useful for example to expose AdGuard Home as a DHCP Server.
  hostNetwork: false

  priorityClassName: ""

  defaultVolumesEnabled: true

  # -- Whether to enable bootstrapping the volume
  bootstrapEnabled: true

  persistence:
    existingClaim: null
    volumeClaimSpec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi

  # -- Additional Volume mounts
  extraVolumeMounts: []

  # -- Additional volumes
  extraVolumes: []

  env:
    TZ: 'Americal/Los_Angeles'

  backup:
    # -- Note that this depends on the Access Mode set for the persistent volume claim (PVC) specified.
    # -- As a consequence, backups will not be possible if the PVC access mode is set to ReadWriteOncePod (Kubernetes 1.22+),
    # -- since the volume will be accessible only to the sole Wallos pod.
    enabled: false
    # -- How frequently the Backup job should run. Cron Syntax, as supported by Kubernetes CronJobs
    schedule: "@daily"
    concurrencyPolicy: Forbid
    restartPolicy: OnFailure
    ttlSecondsAfterFinished: 300
    activeDeadlineSeconds: 1800
    backoffLimit: 1
    parallelism: 1
    imagePullPolicy: IfNotPresent
    resources: {}
    aws:
      # -- For now, only AWS is supported. Setting this to `false` (while `backup.enabled` is `true`) will cause a deployment error.
      enabled: true
      # -- AWS Access Key. Must have the permissions to write to the target bucket.
      accessKeyId: "my-aws-access-key-id"
      # -- AWS Secret Key. Must have the permissions to write to the target bucket.
      secretKey: "my-aws-secret-key"
      # -- Target destination bucket (absolute) in AWS S3, where the backup resources should be written
      s3:
        destination: "s3://path/to/my/wallos-backup-bucket"


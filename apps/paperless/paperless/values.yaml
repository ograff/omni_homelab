paperless-ngx:
  image:
    # -- Image repository
    repository: ghcr.io/paperless-ngx/paperless-ngx
    # -- Image pull policy
    pullPolicy: IfNotPresent
    # -- Image tag
    tag: 2.16.3

  # -- Environment variables [[ref]](https://docs.paperless-ngx.com/configuration/)
  # @default -- See [values.yaml](./values.yaml)
  env:
    # -- Set the container timezone
    TZ: America/Los_Angeles
    # PAPERLESS_SECRET_KEY: ""
    PAPERLESS_DATE_ORDER: MDY
    PAPERLESS_ENABLE_HTTP_REMOTE_USER: true
    PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_CF_ACCESS_AUTHENTICATED_USER_EMAIL

  service:
    # -- Configures service settings for the chart.
    # @default -- See [values.yaml](./values.yaml)
    main:
      ports:
        http:
          port: 8000

  ingress:
    # -- Enable and configure ingress settings for the chart under this key.
    # @default -- See [values.yaml](./values.yaml)
    main:
      ingressClassName: nginx
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: 64m
        cert-manager.io/cluster-issuer: letsencrypt-prod
        external-dns.alpha.kubernetes.io/target: "tunnel.2411.house"
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
      tls: true
      hosts:
        - host: &host paperless.2411.house
          paths:
            - path: /
      tls:
        - hosts:
            - *host
          secretName: paperless-tls-secret

  persistence:
    # -- Configure data volume settings for the chart under this key.
    # @default -- See [values.yaml](./values.yaml)
    data:
      enabled: true
      retain: true
      mountPath: /usr/src/paperless/data
      # storageClass: ""
      accessMode: ReadWriteOnce
      size: 4Gi
    # -- Configure media volume settings for the chart under this key.
    # @default -- See [values.yaml](./values.yaml)
    media:
      enabled: true
      retain: true
      mountPath: /usr/src/paperless/media
      # storageClass: ""
      accessMode: ReadWriteOnce
      size: 8Gi
    # -- Configure export volume settings for the chart under this key.
    # @default -- See [values.yaml](./values.yaml)
    export:
      enabled: true
      retain: true
      mountPath: /usr/src/paperless/export
      # storageClass: ""
      accessMode: ReadWriteOnce
      size: 1Gi
    # -- Configure consume volume settings for the chart under this key.
    # @default -- See [values.yaml](./values.yaml)
    consume:
      enabled: true
      retain: true
      mountPath: /usr/src/paperless/consume
      # storageClass: ""
      accessMode: ReadWriteMany
      size: 4Gi

  # -- Enable and configure postgresql database subchart under this key.
  #    If enabled, the app's db envs will be set for you.
  #    [[ref]](https://github.com/bitnami/charts/tree/main/bitnami/postgresql)
  # @default -- See [values.yaml](./values.yaml)
  postgresql:
    enabled: true
    auth:
      database: paperless
      postgresPassword: paperless
    primary:
      persistence:
        enabled: true
        # storageClass: ""
        size: 8Gi

  # -- Enable and configure mariadb database subchart under this key.
  #    If enabled, the app's db envs will be set for you.
  #    [[ref]](https://github.com/bitnami/charts/tree/main/bitnami/mariadb)
  # @default -- See [values.yaml](./values.yaml)
  mariadb:
    enabled: false
    auth:
      database: paperless
      username: paperless
      password: changeme
      rootPassword: changeme
    primary:
      persistence:
        enabled: false
        # storageClass: ""
        # size: 8Gi

  # -- Enable and configure redis subchart under this key.
  #    If enabled, the app's Redis env will be set for you.
  #    [[ref]](https://github.com/bitnami/charts/tree/main/bitnami/redis)
  # @default -- See [values.yaml](./values.yaml)
  redis:
    image:
      tag: 7.2.4-debian-12-r12
    enabled: true
    auth:
      enabled: true
      username: ""
      # Use an existing secret for redis auth. Do this if you're using Argo to manage your instance or otherwise using helm template under the hood
      #     The secret name can vary, but the password key must be redis-password.
      existingSecret: paperless-redis
      existingSecretPasswordKey: redis-password
    master:
      persistence:
        enabled: false
    replica:
      replicaCount: 0

